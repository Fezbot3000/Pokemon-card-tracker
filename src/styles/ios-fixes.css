/* Modal height fix for full-screen modals - PWA optimized */
.modal-container:not(.modal-contextual) {
  height: 100vh;
  height: 100dvh; /* Dynamic viewport height for better compatibility */
}

/* Desktop modals with gutters - allow flexible height */
@media (min-width: 640px) {
  .modal-container:not(.modal-contextual) {
    height: auto;
    max-height: 100%;
  }
}

/* PWA modal height adjustments for safe areas */
@media (display-mode: standalone) {
  .modal-container:not(.modal-contextual) {
    height: calc(100vh - var(--safe-area-top) - var(--safe-area-bottom));
    height: calc(100dvh - var(--safe-area-top) - var(--safe-area-bottom));
  }

  /* CONSOLIDATED PWA MODAL RULES - Single source of truth for modal positioning */
  
  /* Modal backdrop - full screen coverage without safe area gaps */
  .fixed.inset-0.flex.min-h-screen.w-full.items-center.justify-center {
    /* Use true full screen - no safe area adjustments on backdrop */
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    min-height: 100vh;
    min-height: 100dvh;
  }
  
  /* Modal backdrop when modal is open - account for fixed body */
  body.modal-open .fixed.inset-0.flex.min-h-screen.w-full.items-center.justify-center {
    /* Fixed body changes viewport context - use dvh for proper calculation */
    height: 100dvh;
    min-height: 100dvh;
  }
  
  /* Main content adjustments when modal is open */
  body.modal-open .main-content {
    /* No additional padding needed - safe area handled at modal level */
    padding-bottom: 0;
  }
  
  /* Body adjustments when modal is open */
  body.modal-open {
    /* Remove body padding to prevent bottom gap */
    padding-bottom: 0;
    /* Ensure body doesn't interfere with modal positioning */
    overflow: hidden;
  }
}

/* Contextual modals should have auto height */
.modal-container.modal-contextual {
  height: auto;
  max-height: 90vh;
}

/* PWA contextual modal adjustments */
@media (display-mode: standalone) {
  .modal-container.modal-contextual {
    max-height: calc(90vh - var(--safe-area-top) - var(--safe-area-bottom));
  }
  
  /* PWA contextual modal when open - optimized for fixed body */
  body.modal-open .modal-container.modal-contextual {
    max-height: calc(95dvh - var(--safe-area-top) - var(--safe-area-bottom));
  }
}

  /* iOS Safari specific fixes using design tokens */
@supports (-webkit-touch-callout: none) {
  /* Fix logged-out navigation bar positioning on iOS */
  div.ios-safe-nav.fixed.top-0 {
    padding-top: calc(var(--space-4) + var(--safe-area-top));
  }

  /* Fix logged-in header positioning on iOS */
  header.fixed.top-0 {
    top: var(--safe-area-top);
  }

  /* iOS Safari modal fixes */
  .modal-footer-ios-fix {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: var(--z-index-modal);
  }

  .modal-content-with-absolute-footer {
    padding-bottom: var(--space-20); /* Account for absolute footer */
  }

  /* Fix horizontal scrolling in modals on iPad PWA */
  @media (display-mode: standalone) {
    .modal-container {
      overflow-x: hidden;
    }

    .modal-container * {
      max-width: 100%;
      box-sizing: border-box;
    }

    /* PWA-specific checkbox optimization using design tokens */
    @media (display-mode: standalone) {
      /* Target all checkbox elements in PWA mode */
      input[type='checkbox'],
      input[type='checkbox'].size-4,
      .size-4[type='checkbox'],
      button[aria-label*='Select'],
      button[aria-label*='Deselect'],
      .checkbox-pwa {
        width: var(--pwa-checkbox-size) !important;
        height: var(--pwa-checkbox-size) !important;
        min-width: var(--pwa-checkbox-size) !important;
        min-height: var(--pwa-checkbox-size) !important;
        max-width: var(--pwa-checkbox-size) !important;
        max-height: var(--pwa-checkbox-size) !important;
        transform: scale(1) !important; /* Remove scaling, use direct size */
      }

      /* Card selection buttons optimization */
      .absolute.top-2.right-2 button,
      .absolute.top-2.right-2 input {
        width: var(--pwa-checkbox-size) !important;
        height: var(--pwa-checkbox-size) !important;
      }
      
      /* Ensure consistent sizing for dashboard card checkboxes */
      .mr-3.mt-1 input[type='checkbox'] {
        width: var(--pwa-checkbox-size) !important;
        height: var(--pwa-checkbox-size) !important;
      }
    }
  }

  /* iOS PWA modal header safe area using design tokens */
  @media (display-mode: standalone) {
    .modal-header-ios-safe {
      padding-top: calc(var(--space-3) + var(--safe-area-top));
    }
  }

  /* Improved scroll behavior on iOS */
  .modal-body {
    -webkit-overflow-scrolling: touch;
    overflow-y: auto;
  }

  /* iOS PWA specific fixes using design tokens */
  @media (display-mode: standalone) {
    /* PWA modal backdrop safe area handling - specific targeting */
    .fixed.inset-0.flex.min-h-screen.w-full.items-center.justify-center {
      top: var(--safe-area-top);
      bottom: var(--safe-area-bottom);
      left: var(--safe-area-left);
      right: var(--safe-area-right);
      min-height: calc(100vh - var(--safe-area-top) - var(--safe-area-bottom));
    }
    
    /* PWA modal container safe area padding - REMOVED to prevent double padding */
    .modal-container {
      /* Don't add padding here - backdrop handles positioning */
      margin: var(--space-4);
      max-height: calc(100vh - var(--safe-area-top) - var(--safe-area-bottom) - var(--space-8));
    }
    
    /* PWA modal containers - consolidated above in main PWA section */
  }

  /* iOS form input zoom prevention using design tokens */
  input[type='text'],
  input[type='email'],
  input[type='password'],
  input[type='number'],
  textarea,
  select {
    font-size: var(--font-size-base); /* Prevent zoom on iOS */
  }

  /* iOS button tap targets using design tokens */
  .btn,
  button,
  .button,
  .touch-target-pwa {
    min-height: var(--pwa-touch-target-min);
    min-width: var(--pwa-touch-target-min);
  }

  /* Mobile specific navigation fixes using design tokens */
  @media (max-width: 640px) {
    div.ios-safe-nav.fixed.top-0 {
      padding-top: calc(var(--space-2) + var(--safe-area-top));
    }

    .modal-container:not(.modal-contextual) {
      height: 100vh;
      height: 100dvh;
      margin: var(--space-0);
      padding: var(--space-0);
    }
    
    /* PWA mobile modal adjustments */
    @media (display-mode: standalone) {
      .modal-container:not(.modal-contextual) {
        /* Apply safe area offsets ONLY to modal container, not backdrop */
        height: calc(100dvh - var(--safe-area-top) - var(--safe-area-bottom));
        margin: var(--space-2);
        /* Ensure container is properly positioned within safe area */
        max-height: calc(100dvh - var(--safe-area-top) - var(--safe-area-bottom));
      }
      
      /* PWA mobile modal when open - optimized for fixed body */
      body.modal-open .modal-container:not(.modal-contextual) {
        /* Use dvh for accurate height with fixed body */
        height: calc(100dvh - var(--safe-area-top) - var(--safe-area-bottom));
        margin: 0;
        /* Single safe area calculation - no multiple deductions */
        max-height: calc(100dvh - var(--safe-area-top) - var(--safe-area-bottom));
      }
    }

    /* Contextual modals stay contextual even on mobile */
    .modal-container.modal-contextual {
      height: auto;
      max-height: 80vh;
      margin: var(--space-8);
    }
    
    /* PWA mobile contextual modal adjustments */
    @media (display-mode: standalone) {
      .modal-container.modal-contextual {
        max-height: calc(80dvh - var(--safe-area-top) - var(--safe-area-bottom));
        margin: var(--space-6);
      }
      
      /* PWA mobile contextual modal when open - optimized for fixed body */
      body.modal-open .modal-container.modal-contextual {
        max-height: calc(85dvh - var(--safe-area-top) - var(--safe-area-bottom));
        margin: var(--space-4);
      }
    }
  }

  /* Tablet navigation fixes using design tokens */
  @media (min-width: 641px) and (max-width: 768px) {
    div.ios-safe-nav.fixed.top-0 {
      padding-top: calc(var(--space-3) + var(--safe-area-top));
    }
  }

  /* iPad PWA specific fixes using design tokens and proper specificity */
  @media (min-width: 768px) and (max-width: 1024px) and (display-mode: standalone) {
    /* Fix search toolbar alignment on iPad PWA */
    body.pwa .search-toolbar {
      align-items: center;
    }

    /* Fix filter button positioning */
    body.pwa .search-toolbar button,
    body.pwa .search-toolbar .dropdown-trigger {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    /* Fix view selector alignment */
    body.pwa .search-toolbar .view-selector {
      align-items: center;
    }

    /* Ensure proper button heights using design tokens */
    body.pwa .search-toolbar button {
      min-height: var(--space-10);
    }
  }

  /* PWA mode navigation fixes using design tokens */
  @media (display-mode: standalone) {
    div.ios-safe-nav.fixed.top-0 {
      padding-top: calc(var(--space-4) + var(--safe-area-top));
    }

    /* Desktop PWA header background fill - handled by unified design system */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: var(--safe-area-top);
      background-color: var(--bg-primary);
      z-index: var(--z-index-header);
    }
  }
}
