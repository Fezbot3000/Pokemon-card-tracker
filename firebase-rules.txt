// These rules should be applied in your Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    function isValidUser() {
      return request.auth.token.email_verified || request.auth.token.firebase.sign_in_provider != 'password';
    }
    
    // User profiles
    match /users/{userId} {
      // Only allow users to read/write their own data
      allow read, write: if isSignedIn() && isOwner(userId);
      
      // Sub-collections - users can access their own data
      match /collections/{collectionId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
      
      match /cards/{cardId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
      
      match /soldCards/{cardId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
      
      match /private/{document=**} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
    }
    
    // Public data that any authenticated user can read
    match /public/{document=**} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Deny access to everything else by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// Storage rules
service firebase.storage {
  match /b/{bucket}/o {
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Deny access to everything else by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 