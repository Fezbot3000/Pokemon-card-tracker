name: Deploy to Firebase

on:
  push:
    branches: [ main ]  # Change to your default branch if different

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install Dependencies
        run: |
          npm ci
          cd functions
          npm ci
      
      - name: Set Firebase Functions Config
        run: |
          npm install -g firebase-tools
          firebase functions:config:set pricecharting.key="${{ secrets.PRICECHARTING_API_KEY }}" --project mycardtracker-c8479 --token "${{ secrets.FIREBASE_TOKEN }}"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      
      - name: Create Firebase Configuration
        run: |
          echo '{
            "projects": {
              "default": "mycardtracker-c8479"
            }
          }' > .firebaserc
          
          echo '{
            "functions": {
              "source": "functions",
              "predeploy": [
                "npm --prefix \"$RESOURCE_DIR\" install"
              ]
            },
            "hosting": {
              "public": "build",
              "ignore": [
                "firebase.json",
                "**/.*",
                "**/node_modules/**"
              ],
              "rewrites": [
                {
                  "source": "**",
                  "destination": "/index.html"
                }
              ]
            }
          }' > firebase.json
      
      - name: Create .env file
        run: |
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" > .env
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> .env
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> .env
          echo "REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}" >> .env
          echo "REACT_APP_PSA_USERNAME=${{ secrets.REACT_APP_PSA_USERNAME }}" >> .env
          echo "REACT_APP_PSA_PASSWORD=${{ secrets.REACT_APP_PSA_PASSWORD }}" >> .env
          echo "REACT_APP_PRICECHARTING_API_KEY=${{ secrets.REACT_APP_PRICECHARTING_API_KEY }}" >> .env
          echo "REACT_APP_EBAY_APP_ID=${{ secrets.REACT_APP_EBAY_APP_ID }}" >> .env
          echo "REACT_APP_FIREBASE_CLIENT_ID=${{ secrets.REACT_APP_FIREBASE_CLIENT_ID }}" >> .env
      
      - name: Delete existing functions (if needed)
        run: |
          npm install -g firebase-tools
          firebase functions:delete proxyPriceCharting --region us-central1 --project mycardtracker-c8479 --token "${{ secrets.FIREBASE_TOKEN }}" --force
        continue-on-error: true
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      
      - name: Build React App
        run: |
          npm run build
      
      - name: Deploy to Firebase
        run: |
          npm install -g firebase-tools
          firebase deploy --project mycardtracker-c8479 --token "${{ secrets.FIREBASE_TOKEN }}"
          
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: mycardtracker-c8479
          service_account_key: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          export_default_credentials: true
      
      - name: Apply CORS configuration to Firebase Storage
        run: |
          # Install gsutil if not already installed
          apt-get update && apt-get install -y apt-transport-https ca-certificates gnupg curl
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          apt-get update && apt-get install -y google-cloud-sdk-gsutil
          
          # Apply CORS configuration
          gsutil cors set cors.json gs://mycardtracker-c8479.appspot.com
        continue-on-error: true
