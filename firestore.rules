rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated and owns the document path
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Match the main user document (contains email, displayName etc.)
    match /users/{userId} {
      // Allow owner to GET/LIST their own top-level user doc
      allow get, list: if isOwner(userId);
      // Allow owner to write
      allow write: if isOwner(userId);
    }

    // Match the specific profile document within the 'profile' subcollection
    match /users/{userId}/profile/userData {
       // Allow owner to GET/LIST their own profile data
      allow get, list: if isOwner(userId);
      // Allow owner to write
      allow write: if isOwner(userId);
    }

    // General profile subcollection rule to handle any profile document
    match /users/{userId}/profile/{document=**} {
      // Allow owner to GET/LIST their own profile data
      allow get, list: if isOwner(userId);
      // Allow owner to write
      allow write: if isOwner(userId);
    }

    // Collections: Only the owner can read/write their collections data.
    match /users/{userId}/collections/{document=**} { 
      // Separate read into get and list
      allow get, list: if isOwner(userId);
      // Allow owner to write
      allow write: if isOwner(userId);
    }

    // Sold Cards: Only the owner can read/write their sold card data.
    match /users/{userId}/soldCards/{document=**} { 
      // Separate read into get and list
      allow get, list: if isOwner(userId);
      // Allow owner to write
      allow write: if isOwner(userId);
    }
    
    // Sold Items: Only the owner can read/write their sold items data (new collection name).
    match /users/{userId}/sold-items/{document=**} { 
      // Separate read into get and list
      allow get, list: if isOwner(userId);
      // Allow owner to write
      allow write: if isOwner(userId);
    }
    
    // User Settings: Only the owner can read/write their settings (includes custom sets)
    match /userSettings/{userId} { 
      // Allow owner to read their own settings
      allow get, list: if isOwner(userId);
      // Allow owner to write their own settings
      allow write: if isOwner(userId);
    }

    // --- Add Rule for Cards Subcollection ---
    match /users/{userId}/cards/{document=**} {
      // Allow owner to get, list, and write cards
      allow get, list: if isOwner(userId);
      allow write: if isOwner(userId);
    }

    // Subscriptions: owners can read but not modify 
    match /subscriptions/{userId} {
      // 'get' allows reading a single document
      allow get: if isOwner(userId);
      // Deny list/write operations from client
      allow list, create, update, delete: if false;
    }

    // --- PSA Cards Collection ---
    // This collection serves as a shared cache of PSA card data
    // Any authenticated user can read PSA card data
    // Only authenticated users can write PSA card data (to prevent spam)
    match /psa-cards/{certNumber} {
      // Anyone can read PSA card data
      allow read: if true;
      
      // Only authenticated users can write PSA card data
      // This prevents anonymous users from spamming the database
      allow write: if request.auth != null;
    }
    
    // --- Purchase Invoices ---
    // Only the owner can read/write their purchase invoice data
    match /users/{userId}/purchaseInvoices/{document=**} { 
      // Allow owner to get and list their own purchase invoices
      allow get, list: if isOwner(userId);
      // Allow owner to write their own purchase invoices
      allow write: if isOwner(userId);
    }
    
    // --- User Preferences ---
    // Only the owner can read/write their preferences
    match /userPreferences/{userId} { 
      // Allow owner to read their own preferences
      allow get, list: if isOwner(userId);
      // Allow owner to write their own preferences
      allow write: if isOwner(userId);
    }
    
    // --- Marketplace Items ---
    // All users (including unauthenticated) can read marketplace listings for public SEO page
    // Only authenticated users can create/modify listings
    match /marketplaceItems/{listingId} {
      // Allow anyone (including unauthenticated users) to read marketplace listings
      // This enables the public marketplace page for SEO purposes
      allow read: if true;
      
      // Allow creation of new listings by authenticated users only
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Allow updates and deletes only by the listing owner
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // --- Marketplace Messages ---
    // Simple rules for marketplace messages - any authenticated user can read/write
    match /marketplaceMessages/{threadId} {
      // Allow any authenticated user to read, create, and update threads
      allow read, write: if request.auth != null;
      
      // Messages subcollection - also allow any authenticated user to read/write
      match /messages/{messageId} {
        allow read, write: if request.auth != null;
      }
    }
    
    // --- Marketplace Chats ---
    // Chat functionality for marketplace listings
    match /chats/{chatId} {
      // Allow read if user is authenticated and is a participant
      allow read: if request.auth.uid in resource.data.participants;
      
      // Allow creation if the authenticated user is one of the participants
      allow create: if request.auth.uid in request.resource.data.participants;
      
      // Allow updates only for the leftBy and hiddenBy fields
      allow update: if 
        // Only allow updating the leftBy and/or hiddenBy fields
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['leftBy', 'hiddenBy']) &&
        // Ensure other fields remain unchanged
        request.resource.data.diff(resource.data).unchangedKeys().hasAll(
          resource.data.keys().removeAll(['leftBy', 'hiddenBy'])
        ) &&
        // Check if user is a participant
        request.auth.uid in resource.data.participants &&
        // User must be either buyer or seller
        (request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.sellerId);
      
      // Prevent deletion
      allow delete: if false;
      
      // Messages subcollection - only allow participants to read/write
      match /messages/{messageId} {
        // Allow read if user is a participant in the parent chat
        allow read: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        
        // Allow message creation if user is authenticated, is the sender, and is a participant in the chat
        // Also allow system messages with senderId = 'system'
        allow create: if 
          // Regular user messages
          (request.auth.uid == request.resource.data.senderId &&
           request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants) ||
          // System messages
          (request.resource.data.senderId == 'system' &&
           request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants);
      }
    }
    
    // --- Marketplace Profiles ---
    // Users can read any marketplace profile, but only write their own
    match /marketplaceProfiles/{userId} {
      // Allow any authenticated user to read marketplace profiles
      allow read: if request.auth != null;
      
      // Allow users to create/update their own profile
      allow create, update: if request.auth != null && request.auth.uid == userId;
      
      // Prevent deletion
      allow delete: if false;
    }
    
    // --- Marketplace Reviews ---
    // Reviews for sellers in the marketplace
    match /marketplaceReviews/{reviewId} {
      // Allow any authenticated user to read reviews
      allow read: if request.auth != null;
      
      // Allow creation if the user is authenticated and is the reviewer
      allow create: if request.auth != null && 
        request.resource.data.reviewerId == request.auth.uid;
      
      // Prevent updates and deletes
      allow update, delete: if false;
    }
    
    // --- Marketplace Reports ---
    // Reports for inappropriate listings
    match /marketplaceReports/{reportId} {
      // Only admins can read reports (for now, no one can read)
      allow read: if false;
      
      // Allow authenticated users to create reports
      allow create: if request.auth != null && 
        request.resource.data.reporterId == request.auth.uid;
      
      // Prevent updates and deletes
      allow update, delete: if false;
    }
  }
}
